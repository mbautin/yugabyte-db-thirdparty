trigger:
  - master

resources:
  containers:
    - container: ubuntu1804
      image: yugabytedb/yb_build_infra_ubuntu1804:v2019-04-30T20_16_36_mikhail
    - container: centos7
      image: yugabytedb/yb_build_infra_centos7:v2019-04-30T20_16_52_mikhail

jobs:
  - job: RunInContainer
    pool:
      vmImage: 'ubuntu-16.04'
    timeoutInMinutes: 0

    strategy:
      matrix:
        #ubuntu1804:
        #  containerResource: ubuntu1804
        centos7:
          containerResource: centos7

    container: $[ variables['containerResource'] ]

    steps:
      - script: |
          set -euxo pipefail
          repo_dir=$PWD
          linuxbrew_dir_name=linuxbrew-20190501T182709-nosse4
          linuxbrew_tarball_name=$linuxbrew_dir_name.tar.gz
          linuxbrew_parent_dir=$HOME/linuxbrew_versions
          mkdir -p "$linuxbrew_parent_dir"
          cd "$linuxbrew_parent_dir"
          wget -q https://github.com/YugaByte/brew-build/releases/download/v0.27/$linuxbrew_tarball_name
          time tar xzf "$linuxbrew_tarball_name"
          export YB_LINUXBREW_DIR=$PWD/$linuxbrew_dir_name
          
          cd "$YB_LINUXBREW_DIR"
          time ./post_install.sh

          cd "$repo_dir"
          pip install --user virtualenv 
          (
            export PATH=$linuxbrew_parent_dir/$linuxbrew_dir_name/bin:$PATH
            # Just build one dependency for now.
            #time ./build_thirdparty.sh --build-type uninstrumented zlib
            time ./build_thirdparty.sh
          )

          # Cleanup
          rm -rf src build venv
          find . -name "*.pyc" -exec rm -f {} \;
          
          tag=v0.$( git rev-list --count HEAD )
          
          dir_for_archiving=$HOME/archiving_dir
          mkdir -p "$dir_for_archiving"
          cd "$dir_for_archiving"
          archive_dir_name=yugabyte-db-thirdparty-$tag-$OSTYPE
          repo_dir_when_archiving=$dir_for_archiving/$archive_dir_name
          mv "$repo_dir" "$repo_dir_when_archiving"
          archive_tarball_name=$archive_dir_name.tar.gz
          archive_tarball_path=$PWD/$archive_tarball_name
          tar --exclude "$archive_dir_name/.git" -cvzf \
            "$archive_tarball_name" \
            "$archive_dir_name"
          mv "$repo_dir_when_archiving" "$repo_dir"

          cd "$repo_dir"
          hub release create "$tag" -m "Release $tag" -a "$archive_tarball_path"
        env:
          GITHUB_TOKEN: $(yugabyte.githubToken)

#jobs:
#  - job: ubuntu_1804
#    pool:
#      vmImage: 'Ubuntu-16.04'
#    timeoutInMinutes: 0
#    steps:
#      - script: |
#          docker run --mount type=bind,src=$PWD,target=/mnt/yugabyte-db-thirdparty \
#              yugabytedb/yb_build_infra_ubuntu1804:v2019-04-27T08_37_04_mikhail \
#              bash -c 'mkdir -p /home/yugabuilder/code && \
#                       cp -R /mnt/yugabyte-db-thirdparty /home/yugabuilder/code && \
#                       chown -R yugabuilder /home/yugabuilder/code && \
#                       sudo su - yugabuilder bash -c "pip install --user virtualenv && \
#                                                      cd ~/code/yugabyte-db-thirdparty && \
#                                                      ./build_thirdparty.sh"'
#        displayName: 'Build YugaByte DB third-party dependencies'

